/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: "DOWNLOAD_FASTA|DOWNLOAD_GTF" {
        publishDir = [
            enabled: false
        ]
    }

    withName: "GUNZIP_FASTA|GUNZIP_GTF" {
        publishDir = [
            enabled: false
        ]
    }

    withName: ERCC_CREATE {
        publishDir = [
            enabled: false
        ]
    }

    withName: CAT_FASTA {
        publishDir = [
            path: { "${params.outdir}/references/${params.genome}/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: BOWTIE2_BUILD {
        publishDir = [
            path: { "${params.outdir}/references/${params.genome}" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: STAR_GENOMEGENERATE {
        ext.args = "--sjdbOverhang ${params.read_length - 1}"
        cpus   = { check_max( 24    * task.attempt, 'cpus'    ) }
        memory = { check_max( 100.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 2.d  * task.attempt, 'time'    ) }
        publishDir = [
            path: { "${params.outdir}/references/${params.genome}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
}
